using System;
using DeviceTools.HumanInterfaceDevices;

namespace RgbFusionControl
{
	class Program
	{
		static void Main(string[] args)
		{
			var rgbFusionDevice1 = new HidFullDuplexStream(@"\\?\HID#VID_048D&PID_5702&Col01#6&b086894&0&0000#{4d1e55b2-f16f-11cf-88cb-001111000030}");
			var rgbFusionDevice2 = new HidFullDuplexStream(@"\\?\HID#VID_048D&PID_5702&Col02#6&b086894&0&0001#{4d1e55b2-f16f-11cf-88cb-001111000030}");


			//var data = new byte[64];
			//data[0] = 0xcc;
			//data[1] = 0x60;
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.ReceiveFeatureReport(data);


			var zero = new byte[64];

			zero[0] = 0xCC;

			for (int i = 0; i < 8; i++)
			{
				zero[1] = (byte)(0x20 | i);
				rgbFusionDevice2.SendFeatureReport(zero);
			}

			zero[1] = 0x28;
			zero[2] = 0xFF;

			rgbFusionDevice2.SendFeatureReport(zero);

			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2001000000000000000001A000FFFF000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2102000000000000000001A000FFFF000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2204000000000000000001A000FF40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2308000000000000000001A000FF80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc241000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc252000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc264000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));

			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc200100000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc210200000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc220400000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc230800000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc241000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc252000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc264000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));

			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2001000000000000000008A0000000000000000000640000000000000001050000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2102000000000000000008A0000000000000000000640000000000000001050000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2204000000000000000008A0000000000000000000640000000000000001050000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2308000000000000000008A0000000000000000000640000000000000001050000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc241000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc252000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc264000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));

			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc20FF0000000000000000036410FFFFFF0000000000640064006009640007020000000000000000000000000000000000000000000000000000000000000000"));

			// Wave across all zones (07 is the number of colors)
			rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));

			// Wave effect applied individually: Similar to color cycle, at least for standard (non adressable) regions
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2001000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2102000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2204000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2308000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2410000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2520000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2640000000000000000006640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));

			// Random
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F00000000000000000864000000000000000000640000000000000001050000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F00000000000000000864000000000000000000640000000000000005000000000000000000000000000000000000000000000000000000000000000000"));

			// Wave1 (Does not work)
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F00000000000000000964000000000000000000B00464006801B00400000000000000000000000000000000000000000000000000000000000000000000"));

			// Cycle
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F00000000000000000464000000ff00000000007805b0040000000007000000000000000000000000000000000000000000000000000000000000000000"));

			// Meteor but what are the parameters ?
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F000000000000000005640000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F00000000000000000564000000000000000000e803e803e803000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc207F0000000000000000056400ff00000000000000e803e803e803000000000000000000000000000000000000000000000000000000000000000000000000"));

			rgbFusionDevice2.SendFeatureReport(zero);

			// Command 0x30 defines colors in the color cycle (Found by pure luck in exploration but well, that's a win, I guess ðŸ˜„)
			// Format is BGR0 BGR0 BGR0â€¦ I don't really know how many colors are supposed to be there, but effects usually always use 7.
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc300000ff0000ffff0000ff0000ffff0000ff000000ff00ff008000ff0000000000000000000000000000000000000000000000000000000000000000000000"));
			rgbFusionDevice2.SendFeatureReport(ParseHexString("cc300000ff00007fff0000ffff0000ff0000ff00000082004b00d300940000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc30111111003344330066aa660088ff880022ff220022aa22002244220000000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc300000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			// Try to do a better rainbow in 12 colors (doesn't work)
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc300000ff000080ff0000ffff0000ff800000ff000080ff0000ffff0000ff800000ff000000ff008000ff00ff008000ff000000000000000000000000000000"));

			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc2000000000000000000009A0000000000000000000B00464006801B00400000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc280100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));

			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc20FF000000000000000006A00000000000000000003A0200000000000007000000000000000000000000000000000000000000000000000000000000000000"));
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc280100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));

			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc5e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
			return;
			// Set a color:
			// 0xcc, LED, LED, 0[8], 1, Intensity, 0, Blue, Green, Red, 0[N]

			// Cycle colors
			// 0xcc, LED, LED, 8*0, 4, Intensity, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0x52, Color Duration (64 = ~15s), Transition Speed 1, Transition Speed 2 ?

			var data0 = new byte[] {
				0xcc, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0x00, 0xff, 0xff,
				0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			};

			var data1 = new byte[] {
				0xcc, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x64, 0x00, 0x00, 0x00,
				0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0xee, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			};

			var data2 = new byte[] {
				0xcc, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5a, 0x00, 0xfe, 0xff,
				0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			};

			data1 = ParseHexString("cc200100000000000000000464000000ff00000000007805b0046400000107000000000000000000000000000000000000000000000000000000000000000000");

			for (int i = 0; i < 5; i++)
			{
				data1[1] = (byte)(0x20 | i);
				data1[2] = (byte)(1 << i);
				rgbFusionDevice2.SendFeatureReport(data1);
			}

			for (int i = 5; i < 7; i++)
			{
				data2[1] = (byte)(0x20 | i);
				data2[2] = (byte)(1 << i);
				rgbFusionDevice2.SendFeatureReport(data2);
			}

			rgbFusionDevice2.SendFeatureReport(zero);

			// Might be the magic command to persist the settings that RGB fusion is able to use occasionally. (Once every full moon)
			//rgbFusionDevice2.SendFeatureReport(ParseHexString("cc5e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));

			//rgbFusionDevice.SendFeatureReport(new byte[] {
			//	0xcc, 0x20, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x64, 0x00, 0x00, 0x00,
			//	0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0xee, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//});

			//rgbFusionDevice.SendFeatureReport(new byte[] {
			//	0xcc, 0x21, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x64, 0x00, 0x00, 0x00,
			//	0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0xee, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//});

			//rgbFusionDevice.SendFeatureReport(new byte[] {
			//	0xcc, 0x22, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x64, 0x00, 0x00, 0x00,
			//	0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0xee, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//});

			//rgbFusionDevice.SendFeatureReport(new byte[] {
			//	0xcc, 0x23, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x64, 0x00, 0x00, 0x00,
			//	0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0xee, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//});

			//rgbFusionDevice.SendFeatureReport(new byte[] {
			//	0xcc, 0x24, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x64, 0x00, 0x00, 0x00,
			//	0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x03, 0xee, 0x02, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
			//});
		}

		private static byte[] ParseHexString(string s)
		{
			static bool TryParseDigit(char c, out byte digit)
			{
				if (c >= '0' && c <= 'f')
				{
					if (c <= '9')
					{
						digit = (byte)(c - '0');
					}
					else if (c >= 'A')
					{
						if (c >= 'a')
						{
							digit = (byte)(c - ('a' - 10));
						}
						else if (c <= 'F')
						{
							digit = (byte)(c - ('A' - 10));
						}
						else
						{
							goto Failed;
						}
					}
					else
					{
						goto Failed;
					}

					return true;
				}

			Failed:;
				digit = 0;
				return false;
			}

			byte[] data = new byte[s.Length / 2];

			for (int i = 0; i < data.Length; i++)
			{
				int j = 2 * i;
				if (!TryParseDigit(s[j], out byte a) || !TryParseDigit(s[j + 1], out byte b))
				{
					throw new ArgumentException();
				}
				data[i] = (byte)(a << 4 | b);
			}

			return data;
		}
	}
}
