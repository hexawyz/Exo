<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplyButton.Content" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="BatteryLevelsTitleTextBlock.Text" xml:space="preserve">
    <value>Battery Levels</value>
  </data>
  <data name="CoolerCoolingModeLabel.Text" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="CoolerCurrentSpeed.ToolTipService.ToolTip" xml:space="preserve">
    <value>Current Speed</value>
  </data>
  <data name="CoolingFallbackPowerLabel.Text" xml:space="preserve">
    <value>Fallback Power</value>
  </data>
  <data name="CoolingFallbackPowerLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>This value will be used as a fallback if the sensor value is not available.</value>
  </data>
  <data name="CoolingInputSensorLabel.Text" xml:space="preserve">
    <value>Source Sensor</value>
  </data>
  <data name="CoolingPowerLabel.Text" xml:space="preserve">
    <value>Power</value>
  </data>
  <data name="CustomMenuAddNewItemButton.Label" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="CustomMenuAddNewItemButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Add a menu item.</value>
  </data>
  <data name="CustomMenuAddNormalItemCommand.Description" xml:space="preserve">
    <value>Add a clickable menu item.</value>
  </data>
  <data name="CustomMenuAddNormalItemCommand.Label" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="CustomMenuAddSeparatorItemCommand.Description" xml:space="preserve">
    <value>Add a separator menu item.</value>
  </data>
  <data name="CustomMenuAddSeparatorItemCommand.Label" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="CustomMenuAddSubMenuItemCommand.Description" xml:space="preserve">
    <value>Add a submenu.</value>
  </data>
  <data name="CustomMenuAddSubMenuItemCommand.Label" xml:space="preserve">
    <value>Submenu</value>
  </data>
  <data name="DeviceIdProductId.Text" xml:space="preserve">
    <value>Product ID</value>
  </data>
  <data name="DeviceIdSectionHeader.Text" xml:space="preserve">
    <value>Device ID</value>
  </data>
  <data name="DeviceIdSource.Text" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="DeviceIdVendorId.Text" xml:space="preserve">
    <value>Vendor ID</value>
  </data>
  <data name="DeviceIdVendorIdSource.Text" xml:space="preserve">
    <value>Vendor ID Source</value>
  </data>
  <data name="DeviceIdVersion.Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="LightingEffectLabel.Text" xml:space="preserve">
    <value>Effect</value>
  </data>
  <data name="LightingPersistChangesCheckBox.Content" xml:space="preserve">
    <value>Persist settings in device memory</value>
  </data>
  <data name="LightingPersistChangesCheckBox.ToolTipService.ToolTip" xml:space="preserve">
    <value>This option will allow lighting effects to be applied when the service is not running. Excessive use of this feature can wear the flash storage of some devices.</value>
  </data>
  <data name="LightingZoneUnifiedLightingToggle.ToolTipService.ToolTip" xml:space="preserve">
    <value>Unified Lighting</value>
  </data>
  <data name="MonitorAudioVolumeLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Audio Volume</value>
  </data>
  <data name="MonitorBlueLightFilterLevelLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Blue Light Filter</value>
  </data>
  <data name="MonitorBlueSixAxisHueLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Hue (Blue)</value>
  </data>
  <data name="MonitorBlueSixAxisSaturationLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Saturation (Blue)</value>
  </data>
  <data name="MonitorBlueVideoBlackLevelLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Blue Offset</value>
  </data>
  <data name="MonitorBlueVideoGainLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Video Gain (Blue)</value>
  </data>
  <data name="MonitorBrightnessLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Brightness</value>
  </data>
  <data name="MonitorContrastLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Contrast</value>
  </data>
  <data name="MonitorCyanSixAxisHueLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Hue (Cyan)</value>
  </data>
  <data name="MonitorCyanSixAxisSaturationLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Saturation (Cyan)</value>
  </data>
  <data name="MonitorGreenSixAxisHueLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Hue (Green)</value>
  </data>
  <data name="MonitorGreenSixAxisSaturationLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Saturation (Green)</value>
  </data>
  <data name="MonitorGreenVideoBlackLevelLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Green Offset</value>
  </data>
  <data name="MonitorGreenVideoGainLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Video Gain (Green)</value>
  </data>
  <data name="MonitorInputLagLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Input Lag</value>
  </data>
  <data name="MonitorInputSelectLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Input Select</value>
  </data>
  <data name="MonitorMagentaSixAxisHueLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Hue (Magenta)</value>
  </data>
  <data name="MonitorMagentaSixAxisSaturationLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Saturation (Magenta)</value>
  </data>
  <data name="MonitorMiscellaneousSettingsSectionHeader.Text" xml:space="preserve">
    <value>Miscellaneous</value>
  </data>
  <data name="MonitorOsdLanguageLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>OSD Language</value>
  </data>
  <data name="MonitorPerformanceSettingsSectionHeader.Text" xml:space="preserve">
    <value>Performance</value>
  </data>
  <data name="MonitorPowerIndicatorLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Power Indicator</value>
  </data>
  <data name="MonitorRedSixAxisHueLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Hue (Red)</value>
  </data>
  <data name="MonitorRedSixAxisSaturationLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Saturation (Red)</value>
  </data>
  <data name="MonitorRedVideoBlackLevelLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Red Offset</value>
  </data>
  <data name="MonitorRedVideoGainLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Video Gain (Red)</value>
  </data>
  <data name="MonitorResponseTimeLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Response Time</value>
  </data>
  <data name="MonitorRgbSettingsSectionHeader.Text" xml:space="preserve">
    <value>R/G/B</value>
  </data>
  <data name="MonitorSettingsSectionHeader.Text" xml:space="preserve">
    <value>Monitor settings</value>
  </data>
  <data name="MonitorSharpnessLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>Sharpness</value>
  </data>
  <data name="MonitorSixAxisSettingsSectionHeader.Text" xml:space="preserve">
    <value>6 Colors</value>
  </data>
  <data name="MonitorYellowSixAxisHueLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Hue (Yellow)</value>
  </data>
  <data name="MonitorYellowSixAxisSaturationLabel.ToolTipService.ToolTip" xml:space="preserve">
    <value>6 Axis Saturation (Yellow)</value>
  </data>
  <data name="RefreshButton.Content" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="ResetButton.Content" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="WelcomeTextBlock.Text" xml:space="preserve">
    <value>Welcome to Exo.</value>
  </data>
</root>