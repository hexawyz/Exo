<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
	x:Class="Exo.Settings.Ui.DataTemplates"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mxi="using:Microsoft.Xaml.Interactivity"
	xmlns:local="using:Exo.Settings.Ui"
	xmlns:behaviors="using:Exo.Settings.Ui.Behaviors"
	xmlns:lcontrols="using:Exo.Settings.Ui.Controls"
	xmlns:lconverters="using:Exo.Settings.Ui.Converters"
	xmlns:lts="using:Exo.Settings.Ui.DataTemplateSelectors"
	xmlns:vm="using:Exo.Settings.Ui.ViewModels"
	xmlns:numerics="using:System.Numerics">

	<!-- Monitor setting UI templates -->
	<DataTemplate x:Key="MonitorBrightnessSettingTemplate" x:DataType="vm:MonitorDeviceSettingViewModel">
		<Slider
			Maximum="{Binding MaximumValue, Mode=OneTime}"
			Minimum="{Binding MinimumValue, Mode=OneTime}"
			Value="{Binding Value, Mode=TwoWay, Converter={StaticResource ByteToDoubleConverter}}"
			HorizontalAlignment="Stretch"
			Style="{StaticResource BrightnessSliderStyle}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:CappedValueToPercentConverter MaximumValue="{Binding MaximumValue, Mode=OneTime}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="MonitorContrastSettingTemplate" x:DataType="vm:MonitorDeviceSettingViewModel">
		<Slider
			Maximum="{Binding MaximumValue, Mode=OneTime}"
			Minimum="{Binding MinimumValue, Mode=OneTime}"
			Value="{Binding Value, Mode=TwoWay}"
			HorizontalContentAlignment="Stretch"
			HorizontalAlignment="Stretch">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:CappedValueToPercentConverter MaximumValue="{Binding MaximumValue, Mode=OneTime}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="MonitorDefaultContinuousSettingTemplate" x:DataType="vm:MonitorDeviceSettingViewModel">
		<Slider
			Maximum="{Binding MaximumValue, Mode=OneTime}"
			Minimum="{Binding MinimumValue, Mode=OneTime}"
			Value="{Binding Value, Mode=TwoWay}"
			HorizontalContentAlignment="Stretch"
			HorizontalAlignment="Stretch">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:CappedValueToPercentConverter MaximumValue="{Binding MaximumValue, Mode=OneTime}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="MonitorBrightnessLabelTemplate" x:DataType="vm:MonitorDeviceSettingViewModel">
		<FontIcon Glyph="&#xE706;" HorizontalAlignment="Right" ToolTipService.ToolTip="Brightness" />
	</DataTemplate>
	<DataTemplate x:Key="MonitorContrastLabelTemplate" x:DataType="vm:MonitorDeviceSettingViewModel">
		<FontIcon Glyph="&#xE793;" HorizontalAlignment="Right" ToolTipService.ToolTip="Contrast" />
	</DataTemplate>
	<DataTemplate x:Key="MonitorDefaultLabelSettingTemplate" x:DataType="vm:MonitorDeviceSettingViewModel">
		<TextBlock Text="{Binding DisplayName}" />
	</DataTemplate>
	<lts:MonitorSettingTemplateSelector x:Key="MonitorSettingContentTemplateSelector"
		BrightnessTemplate="{StaticResource MonitorBrightnessSettingTemplate}"
		ContrastTemplate="{StaticResource MonitorContrastSettingTemplate}"
		DefaultContinuousTemplate="{StaticResource MonitorDefaultContinuousSettingTemplate}" />
	<lts:MonitorSettingTemplateSelector x:Key="MonitorSettingLabelTemplateSelector"
		BrightnessTemplate="{StaticResource MonitorBrightnessLabelTemplate}"
		ContrastTemplate="{StaticResource MonitorContrastLabelTemplate}"
		DefaultContinuousTemplate="{StaticResource MonitorDefaultLabelSettingTemplate}" />

	<!-- Lighting property templates -->
	<DataTemplate x:Key="NumericRangePropertyTemplate" x:DataType="vm:ScalarPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{Binding MaximumValue, Mode=OneTime}"
			Minimum="{Binding MinimumValue, Mode=OneTime}"
			Value="{Binding Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="NumericPropertyTemplate" x:DataType="vm:ScalarPropertyViewModel">
		<NumberBox Value="{Binding Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="BooleanPropertyTemplate" x:DataType="vm:ScalarPropertyViewModel">
		<ToggleSwitch IsOn="{Binding Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="EnumPropertyTemplate" x:DataType="vm:ScalarPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{Binding EnumerationValues, Mode=OneTime}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate>
					<TextBlock Text="{Binding DisplayName}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="EnumRangePropertyTemplate" x:DataType="vm:ScalarPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{Binding MaximumValue, Mode=OneTime}"
			Minimum="{Binding MinimumValue, Mode=OneTime}"
			Value="{Binding Value, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:EnumerationValueToNameConverter Values="{Binding EnumerationValues, Mode=OneTime}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="FallbackPropertyTemplate" />
	<DataTemplate x:Key="BrightnessTemplate">
		<Slider
			Maximum="{Binding MaximumValue, Mode=OneTime}"
			Minimum="{Binding MinimumValue, Mode=OneTime}"
			Value="{Binding Value, Mode=TwoWay, Converter={StaticResource ByteToDoubleConverter}}"
			HorizontalAlignment="Stretch"
			Style="{StaticResource BrightnessSliderStyle}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:CappedValueToPercentConverter MaximumValue="{Binding MaximumValue, Mode=OneTime}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="FixedColorArrayPropertyTemplate" x:DataType="vm:RgbColorArrayPropertyViewModel">
		<ItemsControl ItemsSource="{Binding Elements}" Margin="-3,0,0,0">
			<ItemsControl.ItemTemplate>
				<DataTemplate>
					<lcontrols:ColorSwatch Margin="3,0,3,0" Color="{Binding Value, Mode=TwoWay, Converter={StaticResource RgbColorConverter}}" />
				</DataTemplate>
			</ItemsControl.ItemTemplate>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</DataTemplate>
	<DataTemplate x:Key="VariableColorArrayPropertyTemplate" x:DataType="vm:RgbColorArrayPropertyViewModel">
		<StackPanel Orientation="Horizontal">
			<ItemsControl ItemsSource="{Binding Elements}" Margin="-3,0,0,0">
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<lcontrols:ColorSwatch Grid.ColumnSpan="2" Grid.RowSpan="2" Canvas.ZIndex="0" Margin="3,0,3,0" Color="{Binding Value, Mode=TwoWay, Converter={StaticResource RgbColorConverter}}" />
							<!-- TODO: Make a better style for the remove button. Accent is the easiest way to have it visible. This will do for now. -->
							<Button Grid.Column="1" Canvas.ZIndex="10" Margin="0" Padding="1,0,0,0" Style="{StaticResource AccentButtonStyle}" Command="{Binding RemoveCommand, Mode=OneWay}" CommandParameter="{Binding}">
								<FontIcon Glyph="&#xE738;" FontSize="8" />
							</Button>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
			<Button Margin="6,0,0,0" Command="{Binding AddCommand, Mode=OneWay}" Padding="4,4,2,3">
				<FontIcon Glyph="&#xE710;" />
			</Button>
		</StackPanel>
	</DataTemplate>
	<DataTemplate x:Key="ColorPropertyTemplate" x:DataType="vm:ScalarPropertyViewModel">
		<lcontrols:ColorSwatch Color="{Binding Value, Mode=TwoWay}" HorizontalAlignment="Left" />
	</DataTemplate>
	<DataTemplate x:Key="Direction1DPropertyTemplate" x:DataType="vm:ScalarPropertyViewModel">
		<StackPanel Orientation="Horizontal">
			<ToggleButton x:Uid="EffectDirectionBackwardButton" Margin="0,0,3,0" Padding="9,4,9,5" IsChecked="{Binding Value, Mode=TwoWay, Converter={StaticResource EffectDirectionToBooleanConverter}}">
				<FontIcon Glyph="&#xE72B;" />
			</ToggleButton>
			<ToggleButton x:Uid="EffectDirectionForwardButton" Margin="3,0,0,0" Padding="9,4,9,5">
				<ToggleButton.IsChecked>
					<Binding Path="Value" Mode="TwoWay" Converter="{StaticResource EffectDirectionToBooleanConverter}">
						<Binding.ConverterParameter>
							<x:Boolean>True</x:Boolean>
						</Binding.ConverterParameter>
					</Binding>
				</ToggleButton.IsChecked>
				<FontIcon Glyph="&#xE72A;" />
			</ToggleButton>
		</StackPanel>
	</DataTemplate>

	<!-- Template selector for the above effect property templates. -->
	<lts:EffectPropertyTemplateSelector
		x:Key="EffectPropertyTemplateSelector"
		NumericRangeTemplate="{StaticResource NumericRangePropertyTemplate}"
		NumericTemplate="{StaticResource NumericPropertyTemplate}"
		BooleanTemplate="{StaticResource BooleanPropertyTemplate}"
		BrightnessTemplate="{StaticResource BrightnessTemplate}"
		Direction1DTemplate="{StaticResource Direction1DPropertyTemplate}"
		ColorTemplate="{StaticResource ColorPropertyTemplate}"
		EnumTemplate="{StaticResource EnumPropertyTemplate}"
		EnumRangeTemplate="{StaticResource EnumRangePropertyTemplate}"
		FixedColorArrayTemplate="{StaticResource FixedColorArrayPropertyTemplate}"
		VariableColorArrayTemplate="{StaticResource VariableColorArrayPropertyTemplate}"
		FallbackTemplate="{StaticResource FallbackPropertyTemplate}" />

	<DataTemplate x:Key="TextMenuItemTemplate" x:DataType="vm:TextMenuMenuItemViewModel">
		<Grid
			Padding="{StaticResource MenuFlyoutItemThemePadding}"
			Background="{ThemeResource MenuFlyoutItemBackground}"
			BorderBrush="{ThemeResource MenuFlyoutItemBackgroundBrush}"
			BorderThickness="{ThemeResource MenuFlyoutItemBorderThickness}"
			CornerRadius="{ThemeResource ControlCornerRadius}">
			<TextBlock
				Text="{Binding Text}"
				TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}"
				Foreground="{ThemeResource MenuFlyoutItemForeground}"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				FontSize="{ThemeResource ControlContentThemeFontSize}"
				Margin="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
		</Grid>
	</DataTemplate>
	<DataTemplate x:Key="SubMenuMenuItemTemplate" x:DataType="vm:SubMenuMenuItemViewModel">
		<Grid
			Padding="{StaticResource MenuFlyoutItemThemePadding}"
			Background="{ThemeResource MenuFlyoutSubItemBackground}"
			BorderBrush="{ThemeResource MenuFlyoutSubItemBackgroundBrush}"
			BorderThickness="{ThemeResource MenuFlyoutSubItemBorderThickness}"
			CornerRadius="{ThemeResource ControlCornerRadius}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock
				Text="{Binding Text}"
				TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}"
				Foreground="{ThemeResource MenuFlyoutSubItemForeground}"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				FontSize="{ThemeResource ControlContentThemeFontSize}"
				Margin="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
			<Button Grid.Column="1" Margin="24,-5,-11,-6" Command="{Binding NavigateToCommand}" CommandParameter="{Binding}">
				<!--
				<Button.Template>
					<ControlTemplate TargetType="Button">
						<ContentPresenter Content="{TemplateBinding Content}"/>
					</ControlTemplate>
				</Button.Template>
				-->
				<FontIcon
					Glyph="&#xE974;"
					FontFamily="{ThemeResource SymbolThemeFontFamily}"
					FontSize="12"
					AutomationProperties.AccessibilityView="Raw"
					Foreground="{ThemeResource MenuFlyoutSubItemChevron}"
					MirroredWhenRightToLeft="True" />
			</Button>
		</Grid>
	</DataTemplate>
	<DataTemplate x:Key="SeparatorMenuItemTemplate" x:DataType="vm:SeparatorMenuItemViewModel">
		<Rectangle Fill="{ThemeResource MenuFlyoutSeparatorBackground}" Margin="{StaticResource MenuFlyoutSeparatorThemePadding}" Height="{StaticResource MenuFlyoutSeparatorHeight}" />
	</DataTemplate>

	<lts:MenuItemTemplateSelector
		x:Key="MenuItemPreviewTemplateSelector"
		TextTemplate="{StaticResource TextMenuItemTemplate}"
		SubMenuTemplate="{StaticResource SubMenuMenuItemTemplate}"
		SeparatorTemplate="{StaticResource SeparatorMenuItemTemplate}" />

	<!-- Derived from DefaultMenuFlyoutPresenterStyle -->
	<Style x:Key="MenuPreviewStyle" TargetType="ListView">
		<Setter Property="Shadow">
			<Setter.Value>
				<ThemeShadow />
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{ThemeResource MenuFlyoutPresenterBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource MenuFlyoutPresenterBorderBrush}" />
		<Setter Property="BorderThickness" Value="{ThemeResource MenuFlyoutPresenterBorderThemeThickness}" />
		<Setter Property="Padding" Value="{StaticResource MenuFlyoutPresenterThemePadding}" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
		<Setter Property="MaxWidth" Value="{ThemeResource FlyoutThemeMaxWidth}" />
		<Setter Property="MinHeight" Value="{StaticResource MenuFlyoutThemeMinHeight}" />
		<Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
		<Setter Property="ItemTemplateSelector" Value="{StaticResource MenuItemPreviewTemplateSelector}" />
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
					<Setter Property="MinHeight" Value="12" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border
						Shadow="{TemplateBinding Shadow}"
						Translation="0,0,32"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						BackgroundSizing="InnerBorderEdge">
						<ScrollViewer x:Name="MenuFlyoutPresenterScrollViewer" Margin="{TemplateBinding Padding}" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.FlyoutContentMinWidth}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" AutomationProperties.AccessibilityView="Raw">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="AutomaticCoolingParametersStyle" />

	<DataTemplate x:Key="FixedCoolingParametersStyle" x:DataType="vm:FixedCoolingModeViewModel">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{StaticResource PropertyLabelColumnWidth}" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Row="0" Grid.Column="0" x:Uid="CoolingPowerLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<Slider
				Grid.Row="0"
				Grid.Column="1"
				Margin="{StaticResource RowContentLabelMargin}"
				Maximum="100"
				Minimum="{Binding MinimumPower, Mode=OneTime}"
				Value="{Binding Power, Mode=TwoWay, Converter={StaticResource ByteToDoubleConverter}}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch"
				ThumbToolTipValueConverter="{StaticResource IntegerPercentValueConverter}" />
			<Button Grid.Row="0" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{Binding ResetPowerCommand}" CommandParameter="{Binding}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="SoftwareControlCurveCoolingParametersStyle" x:DataType="vm:ControlCurveCoolingModeViewModel">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{StaticResource PropertyLabelColumnWidth}" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Grid.Column="0" x:Uid="CoolingFallbackPowerLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<Slider
				Grid.Row="0"
				Grid.Column="1"
				Margin="6,6,6,6"
				Maximum="100"
				Minimum="{Binding MinimumPower, Mode=OneTime}"
				Value="{Binding FallbackPower, Mode=TwoWay, Converter={StaticResource ByteToDoubleConverter}}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch"
				ThumbToolTipValueConverter="{StaticResource IntegerPercentValueConverter}" />
			<Button Grid.Row="0" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{Binding ResetFallbackPowerCommand}" CommandParameter="{Binding}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
			<TextBlock Grid.Row="1" Grid.Column="0" x:Uid="CoolingInputSensorLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<ComboBox
				Grid.Row="1"
				Grid.Column="1"
				Margin="{StaticResource RowContentLabelMargin}"
				ItemsSource="{Binding SensorsAvailableForCoolingControlCurves, Mode=OneTime}"
				SelectedItem="{Binding InputSensor, Mode=TwoWay}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding FullDisplayName}" />
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<mxi:Interaction.Behaviors>
					<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
				</mxi:Interaction.Behaviors>
			</ComboBox>
			<Button Grid.Row="1" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{Binding ResetInputSensorCommand}" CommandParameter="{Binding}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
			<lcontrols:PowerControlCurveEditor
				Grid.Row="2"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Style="{StaticResource CoolingPowerControlCurveEditorStyle}"
				MinimumInputValue="{Binding InputSensor.ScaleMinimumValue}"
				MaximumInputValue="{Binding InputSensor.ScaleMaximumValue}"
				LiveInputValue="{Binding InputSensor.LiveDetails.CurrentValue.Value}"
				MinimumPower="{Binding MinimumOnPower}"
				CanSwitchOff="{Binding CanSwitchOff}"
				Points="{Binding Points}" />
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="HardwareControlCurveCoolingParametersStyle" x:DataType="vm:ControlCurveCoolingModeViewModel">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{StaticResource PropertyLabelColumnWidth}" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Grid.Column="0" x:Uid="CoolingInputSensorLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<ComboBox
				Grid.Row="0"
				Grid.Column="1"
				Margin="{StaticResource RowContentLabelMargin}"
				ItemsSource="{Binding SensorsAvailableForCoolingControlCurves, Mode=OneTime}"
				SelectedItem="{Binding InputSensor, Mode=TwoWay}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch">
				<ComboBox.ItemTemplate>
					<DataTemplate>
						<TextBlock Text="{Binding DisplayName}" />
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<mxi:Interaction.Behaviors>
					<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
				</mxi:Interaction.Behaviors>
			</ComboBox>
			<Button Grid.Row="0" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{Binding ResetInputSensorCommand}" CommandParameter="{Binding}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
			<lcontrols:PowerControlCurveEditor
				Grid.Row="1"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Style="{StaticResource CoolingPowerControlCurveEditorStyle}"
				MinimumInputValue="{Binding InputSensor.ScaleMinimumValue}"
				MaximumInputValue="{Binding InputSensor.ScaleMaximumValue}"
				LiveInputValue="{Binding InputSensor.LiveDetails.CurrentValue.Value}"
				MinimumPower="{Binding MinimumOnPower}"
				CanSwitchOff="{Binding CanSwitchOff}"
				Points="{Binding Points}" />
		</Grid>
	</DataTemplate>

	<lts:CoolingParametersTemplateSelector
		x:Key="CoolingParametersTemplateSelector"
		AutomaticTemplate="{StaticResource AutomaticCoolingParametersStyle}"
		FixedTemplate="{StaticResource FixedCoolingParametersStyle}"
		SoftwareControlCurveTemplate="{StaticResource SoftwareControlCurveCoolingParametersStyle}"
		HardwareControlCurveTemplate="{StaticResource HardwareControlCurveCoolingParametersStyle}" />

</ResourceDictionary>
