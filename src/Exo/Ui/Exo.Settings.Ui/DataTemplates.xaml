<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
	x:Class="Exo.Settings.Ui.DataTemplates"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mxi="using:Microsoft.Xaml.Interactivity"
	xmlns:local="using:Exo.Settings.Ui"
	xmlns:behaviors="using:Exo.Settings.Ui.Behaviors"
	xmlns:lcontrols="using:Exo.Settings.Ui.Controls"
	xmlns:lconverters="using:Exo.Settings.Ui.Converters"
	xmlns:lts="using:Exo.Settings.Ui.DataTemplateSelectors"
	xmlns:vm="using:Exo.Settings.Ui.ViewModels"
	xmlns:numerics="using:System.Numerics">

	<!-- Lighting property templates -->
	<DataTemplate x:Key="ByteNumericRangePropertyTemplate" x:DataType="vm:BytePropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="SByteNumericRangePropertyTemplate" x:DataType="vm:SBytePropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="UInt16NumericRangePropertyTemplate" x:DataType="vm:UInt16PropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="Int16NumericRangePropertyTemplate" x:DataType="vm:Int16PropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="UInt32NumericRangePropertyTemplate" x:DataType="vm:UInt32PropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="Int32NumericRangePropertyTemplate" x:DataType="vm:Int32PropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="UInt64NumericRangePropertyTemplate" x:DataType="vm:UInt64PropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Converter={StaticResource UInt64ToDoubleConverter}, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Converter={StaticResource UInt64ToDoubleConverter}, Mode=OneWay}"
			Value="{x:Bind Value, Converter={StaticResource UInt64ToDoubleConverter}, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="Int64NumericRangePropertyTemplate" x:DataType="vm:Int64PropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Converter={StaticResource Int64ToDoubleConverter}, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Converter={StaticResource Int64ToDoubleConverter}, Mode=OneWay}"
			Value="{x:Bind Value, Converter={StaticResource Int64ToDoubleConverter}, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="HalfNumericRangePropertyTemplate" x:DataType="vm:HalfPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Converter={StaticResource HalfToDoubleConverter}, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Converter={StaticResource HalfToDoubleConverter}, Mode=OneWay}"
			Value="{x:Bind Value, Converter={StaticResource HalfToDoubleConverter}, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="SingleNumericRangePropertyTemplate" x:DataType="vm:SinglePropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="DoubleNumericRangePropertyTemplate" x:DataType="vm:DoublePropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="ByteNumericPropertyTemplate" x:DataType="vm:BytePropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="SByteNumericPropertyTemplate" x:DataType="vm:SBytePropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="UInt16NumericPropertyTemplate" x:DataType="vm:UInt16PropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="Int16NumericPropertyTemplate" x:DataType="vm:Int16PropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="UInt32NumericPropertyTemplate" x:DataType="vm:UInt32PropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="Int32NumericPropertyTemplate" x:DataType="vm:Int32PropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="UInt64NumericPropertyTemplate" x:DataType="vm:UInt64PropertyViewModel">
		<NumberBox Value="{x:Bind Value, Converter={StaticResource UInt64ToDoubleConverter}, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="Int64NumericPropertyTemplate" x:DataType="vm:Int64PropertyViewModel">
		<NumberBox Value="{x:Bind Value, Converter={StaticResource Int64ToDoubleConverter}, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="HalfNumericPropertyTemplate" x:DataType="vm:HalfPropertyViewModel">
		<NumberBox Value="{x:Bind Value, Converter={StaticResource HalfToDoubleConverter}, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="SingleNumericPropertyTemplate" x:DataType="vm:SinglePropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="DoubleNumericPropertyTemplate" x:DataType="vm:DoublePropertyViewModel">
		<NumberBox Value="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="BooleanPropertyTemplate" x:DataType="vm:BooleanPropertyViewModel">
		<ToggleSwitch IsOn="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="StringPropertyTemplate" x:DataType="vm:StringPropertyViewModel">
		<TextBox Text="{x:Bind Value, Mode=TwoWay}" />
	</DataTemplate>
	<DataTemplate x:Key="ByteEnumPropertyTemplate" x:DataType="vm:ByteEnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:ByteEnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="SByteEnumPropertyTemplate" x:DataType="vm:SByteEnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:SByteEnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="UInt16EnumPropertyTemplate" x:DataType="vm:UInt16EnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:UInt16EnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="Int16EnumPropertyTemplate" x:DataType="vm:Int16EnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:Int16EnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="UInt32EnumPropertyTemplate" x:DataType="vm:UInt32EnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:UInt32EnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="Int32EnumPropertyTemplate" x:DataType="vm:Int32EnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:Int32EnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="UInt64EnumPropertyTemplate" x:DataType="vm:UInt64EnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:UInt64EnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="Int64EnumPropertyTemplate" x:DataType="vm:Int64EnumPropertyViewModel">
		<ComboBox
			SelectedValuePath="Value"
			SelectedValue="{x:Bind Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
			ItemsSource="{x:Bind EnumerationValues, Mode=OneWay}" HorizontalAlignment="Stretch">
			<ComboBox.ItemTemplate>
				<DataTemplate x:DataType="vm:Int64EnumerationValueViewModel">
					<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
				</DataTemplate>
			</ComboBox.ItemTemplate>
			<mxi:Interaction.Behaviors>
				<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
			</mxi:Interaction.Behaviors>
		</ComboBox>
	</DataTemplate>
	<DataTemplate x:Key="ByteEnumRangePropertyTemplate" x:DataType="vm:ByteEnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:ByteEnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="SByteEnumRangePropertyTemplate" x:DataType="vm:SByteEnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:SByteEnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="UInt16EnumRangePropertyTemplate" x:DataType="vm:UInt16EnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:UInt16EnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="Int16EnumRangePropertyTemplate" x:DataType="vm:Int16EnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:Int16EnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="UInt32EnumRangePropertyTemplate" x:DataType="vm:UInt32EnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:UInt32EnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="Int32EnumRangePropertyTemplate" x:DataType="vm:Int32EnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:Int32EnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="UInt64EnumRangePropertyTemplate" x:DataType="vm:UInt64EnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Converter={StaticResource UInt64ToDoubleConverter}, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Converter={StaticResource UInt64ToDoubleConverter}, Mode=OneWay}"
			Value="{x:Bind Value, Converter={StaticResource UInt64ToDoubleConverter}, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:UInt64EnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="Int64EnumRangePropertyTemplate" x:DataType="vm:Int64EnumPropertyViewModel">
		<Slider
			HorizontalAlignment="Stretch"
			HorizontalContentAlignment="Stretch"
			SnapsTo="StepValues"
			TickFrequency="1"
			Maximum="{x:Bind MaximumValue, Converter={StaticResource Int64ToDoubleConverter}, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Converter={StaticResource Int64ToDoubleConverter}, Mode=OneWay}"
			Value="{x:Bind Value, Converter={StaticResource Int64ToDoubleConverter}, Mode=TwoWay}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:Int64EnumerationValueToNameConverter Values="{x:Bind EnumerationValues, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="FallbackPropertyTemplate" />
	<DataTemplate x:Key="BrightnessTemplate" x:DataType="vm:BrightnessPropertyViewModel">
		<Slider
			Maximum="{x:Bind MaximumValue, Mode=OneWay}"
			Minimum="{x:Bind MinimumValue, Mode=OneWay}"
			Value="{x:Bind Value, Mode=TwoWay}"
			HorizontalAlignment="Stretch"
			Style="{StaticResource BrightnessSliderStyle}">
			<Slider.ThumbToolTipValueConverter>
				<lconverters:CappedValueToPercentConverter MaximumValue="{x:Bind MaximumValue, Mode=OneWay}" />
			</Slider.ThumbToolTipValueConverter>
		</Slider>
	</DataTemplate>
	<DataTemplate x:Key="FixedColorArrayPropertyTemplate" x:DataType="vm:RgbColorArrayPropertyViewModel">
		<ItemsControl ItemsSource="{x:Bind Elements, Mode=OneWay}" Margin="-3,0,0,0">
			<ItemsControl.ItemTemplate>
				<DataTemplate x:DataType="vm:RgbColorArrayElementViewModel">
					<lcontrols:ColorSwatch Margin="3,0,3,0" Color="{x:Bind Value, Converter={StaticResource RgbColorConverter}, Mode=TwoWay}" />
				</DataTemplate>
			</ItemsControl.ItemTemplate>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</DataTemplate>
	<DataTemplate x:Key="VariableColorArrayPropertyTemplate" x:DataType="vm:RgbColorArrayPropertyViewModel">
		<StackPanel Orientation="Horizontal">
			<ItemsControl ItemsSource="{x:Bind Elements, Mode=OneWay}" Margin="-3,0,0,0">
				<ItemsControl.ItemTemplate>
					<DataTemplate x:DataType="vm:RgbColorArrayElementViewModel">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<lcontrols:ColorSwatch Grid.ColumnSpan="2" Grid.RowSpan="2" Canvas.ZIndex="0" Margin="3,0,3,0" Color="{x:Bind Value, Converter={StaticResource RgbColorConverter}, Mode=TwoWay}" />
							<!-- TODO: Make a better style for the remove button. Accent is the easiest way to have it visible. This will do for now. -->
							<Button Grid.Column="1" Canvas.ZIndex="10" Margin="0" Padding="1,0,0,0" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind RemoveCommand, Mode=OneWay}" CommandParameter="{x:Bind}">
								<FontIcon Glyph="&#xE738;" FontSize="8" />
							</Button>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal" />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
			<Button Margin="6,0,0,0" Command="{x:Bind AddCommand, Mode=OneWay}" Padding="4,4,2,3">
				<FontIcon Glyph="&#xE710;" />
			</Button>
		</StackPanel>
	</DataTemplate>
	<DataTemplate x:Key="ColorPropertyTemplate" x:DataType="vm:RgbColorPropertyViewModel">
		<lcontrols:ColorSwatch Color="{x:Bind Value, Converter={StaticResource RgbColorConverter}, Mode=TwoWay}" HorizontalAlignment="Left" />
	</DataTemplate>
	<DataTemplate x:Key="Direction1DPropertyTemplate" x:DataType="vm:EffectDirection1DPropertyViewModel">
		<StackPanel Orientation="Horizontal">
			<ToggleButton x:Uid="EffectDirectionBackwardButton" Margin="0,0,3,0" Padding="9,4,9,5" IsChecked="{x:Bind Value, Mode=TwoWay, Converter={StaticResource EffectDirectionToBooleanConverter}}">
				<FontIcon Glyph="&#xE72B;" />
			</ToggleButton>
			<ToggleButton x:Uid="EffectDirectionForwardButton" Margin="3,0,0,0" Padding="9,4,9,5" IsChecked="{x:Bind Value, Mode=TwoWay, Converter={StaticResource EffectDirectionToInverseBooleanConverter}}">
				<FontIcon Glyph="&#xE72A;" />
			</ToggleButton>
		</StackPanel>
	</DataTemplate>

	<!-- Template selector for the above effect property templates. -->
	<lts:EffectPropertyTemplateSelector
		x:Key="EffectPropertyTemplateSelector"
		ByteNumericRangeTemplate="{StaticResource ByteNumericRangePropertyTemplate}"
		SByteNumericRangeTemplate="{StaticResource SByteNumericRangePropertyTemplate}"
		UInt16NumericRangeTemplate="{StaticResource UInt16NumericRangePropertyTemplate}"
		Int16NumericRangeTemplate="{StaticResource Int16NumericRangePropertyTemplate}"
		UInt32NumericRangeTemplate="{StaticResource UInt32NumericRangePropertyTemplate}"
		Int32NumericRangeTemplate="{StaticResource Int32NumericRangePropertyTemplate}"
		UInt64NumericRangeTemplate="{StaticResource UInt64NumericRangePropertyTemplate}"
		Int64NumericRangeTemplate="{StaticResource Int64NumericRangePropertyTemplate}"
		HalfNumericRangeTemplate="{StaticResource HalfNumericRangePropertyTemplate}"
		SingleNumericRangeTemplate="{StaticResource SingleNumericRangePropertyTemplate}"
		DoubleNumericRangeTemplate="{StaticResource DoubleNumericRangePropertyTemplate}"
		ByteNumericTemplate="{StaticResource ByteNumericPropertyTemplate}"
		SByteNumericTemplate="{StaticResource SByteNumericPropertyTemplate}"
		UInt16NumericTemplate="{StaticResource UInt16NumericPropertyTemplate}"
		Int16NumericTemplate="{StaticResource Int16NumericPropertyTemplate}"
		UInt32NumericTemplate="{StaticResource UInt32NumericPropertyTemplate}"
		Int32NumericTemplate="{StaticResource Int32NumericPropertyTemplate}"
		UInt64NumericTemplate="{StaticResource UInt64NumericPropertyTemplate}"
		Int64NumericTemplate="{StaticResource Int64NumericPropertyTemplate}"
		HalfNumericTemplate="{StaticResource HalfNumericPropertyTemplate}"
		SingleNumericTemplate="{StaticResource SingleNumericPropertyTemplate}"
		DoubleNumericTemplate="{StaticResource DoubleNumericPropertyTemplate}"
		BooleanTemplate="{StaticResource BooleanPropertyTemplate}"
		TextTemplate="{StaticResource StringPropertyTemplate}"
		BrightnessTemplate="{StaticResource BrightnessTemplate}"
		Direction1DTemplate="{StaticResource Direction1DPropertyTemplate}"
		ColorTemplate="{StaticResource ColorPropertyTemplate}"
		ByteEnumTemplate="{StaticResource ByteEnumPropertyTemplate}"
		SByteEnumTemplate="{StaticResource SByteEnumPropertyTemplate}"
		UInt16EnumTemplate="{StaticResource UInt16EnumPropertyTemplate}"
		Int16EnumTemplate="{StaticResource Int16EnumPropertyTemplate}"
		UInt32EnumTemplate="{StaticResource UInt32EnumPropertyTemplate}"
		Int32EnumTemplate="{StaticResource Int32EnumPropertyTemplate}"
		UInt64EnumTemplate="{StaticResource UInt64EnumPropertyTemplate}"
		Int64EnumTemplate="{StaticResource Int64EnumPropertyTemplate}"
		ByteEnumRangeTemplate="{StaticResource ByteEnumRangePropertyTemplate}"
		SByteEnumRangeTemplate="{StaticResource SByteEnumRangePropertyTemplate}"
		UInt16EnumRangeTemplate="{StaticResource UInt16EnumRangePropertyTemplate}"
		Int16EnumRangeTemplate="{StaticResource Int16EnumRangePropertyTemplate}"
		UInt32EnumRangeTemplate="{StaticResource UInt32EnumRangePropertyTemplate}"
		Int32EnumRangeTemplate="{StaticResource Int32EnumRangePropertyTemplate}"
		UInt64EnumRangeTemplate="{StaticResource UInt64EnumRangePropertyTemplate}"
		Int64EnumRangeTemplate="{StaticResource Int64EnumRangePropertyTemplate}"
		FixedColorArrayTemplate="{StaticResource FixedColorArrayPropertyTemplate}"
		VariableColorArrayTemplate="{StaticResource VariableColorArrayPropertyTemplate}"
		FallbackTemplate="{StaticResource FallbackPropertyTemplate}" />

	<DataTemplate x:Key="TextMenuItemTemplate" x:DataType="vm:TextMenuMenuItemViewModel">
		<Grid
			Padding="{StaticResource MenuFlyoutItemThemePadding}"
			Background="{ThemeResource MenuFlyoutItemBackground}"
			BorderBrush="{ThemeResource MenuFlyoutItemBackgroundBrush}"
			BorderThickness="{ThemeResource MenuFlyoutItemBorderThickness}"
			CornerRadius="{ThemeResource ControlCornerRadius}">
			<TextBlock
				Text="{x:Bind Text, Mode=OneWay}"
				TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}"
				Foreground="{ThemeResource MenuFlyoutItemForeground}"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				FontSize="{ThemeResource ControlContentThemeFontSize}"
				Margin="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
		</Grid>
	</DataTemplate>
	<DataTemplate x:Key="SubMenuMenuItemTemplate" x:DataType="vm:SubMenuMenuItemViewModel">
		<Grid
			Padding="{StaticResource MenuFlyoutItemThemePadding}"
			Background="{ThemeResource MenuFlyoutSubItemBackground}"
			BorderBrush="{ThemeResource MenuFlyoutSubItemBackgroundBrush}"
			BorderThickness="{ThemeResource MenuFlyoutSubItemBorderThickness}"
			CornerRadius="{ThemeResource ControlCornerRadius}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock
				Text="{x:Bind Text, Mode=OneWay}"
				TextTrimming="{ThemeResource MenuFlyoutItemTextTrimming}"
				Foreground="{ThemeResource MenuFlyoutSubItemForeground}"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Center"
				FontSize="{ThemeResource ControlContentThemeFontSize}"
				Margin="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
			<Button Grid.Column="1" Margin="24,-5,-11,-6" Command="{x:Bind NavigateToCommand, Mode=OneWay}" CommandParameter="{x:Bind Mode=OneWay}">
				<!--
				<Button.Template>
					<ControlTemplate TargetType="Button">
						<ContentPresenter Content="{TemplateBinding Content}"/>
					</ControlTemplate>
				</Button.Template>
				-->
				<FontIcon
					Glyph="&#xE974;"
					FontFamily="{ThemeResource SymbolThemeFontFamily}"
					FontSize="12"
					AutomationProperties.AccessibilityView="Raw"
					Foreground="{ThemeResource MenuFlyoutSubItemChevron}"
					MirroredWhenRightToLeft="True" />
			</Button>
		</Grid>
	</DataTemplate>
	<DataTemplate x:Key="SeparatorMenuItemTemplate" x:DataType="vm:SeparatorMenuItemViewModel">
		<Rectangle Fill="{ThemeResource MenuFlyoutSeparatorBackground}" Margin="{StaticResource MenuFlyoutSeparatorThemePadding}" Height="{StaticResource MenuFlyoutSeparatorHeight}" />
	</DataTemplate>

	<lts:MenuItemTemplateSelector
		x:Key="MenuItemPreviewTemplateSelector"
		TextTemplate="{StaticResource TextMenuItemTemplate}"
		SubMenuTemplate="{StaticResource SubMenuMenuItemTemplate}"
		SeparatorTemplate="{StaticResource SeparatorMenuItemTemplate}" />

	<!-- Derived from DefaultMenuFlyoutPresenterStyle -->
	<Style x:Key="MenuPreviewStyle" TargetType="ListView">
		<Setter Property="Shadow">
			<Setter.Value>
				<ThemeShadow />
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{ThemeResource MenuFlyoutPresenterBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource MenuFlyoutPresenterBorderBrush}" />
		<Setter Property="BorderThickness" Value="{ThemeResource MenuFlyoutPresenterBorderThemeThickness}" />
		<Setter Property="Padding" Value="{StaticResource MenuFlyoutPresenterThemePadding}" />
		<Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
		<Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
		<Setter Property="MaxWidth" Value="{ThemeResource FlyoutThemeMaxWidth}" />
		<Setter Property="MinHeight" Value="{StaticResource MenuFlyoutThemeMinHeight}" />
		<Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
		<Setter Property="ItemTemplateSelector" Value="{StaticResource MenuItemPreviewTemplateSelector}" />
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
					<Setter Property="MinHeight" Value="12" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListView">
					<Border
						Shadow="{TemplateBinding Shadow}"
						Translation="0,0,32"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						BackgroundSizing="InnerBorderEdge">
						<!--
						NB: In the actual MenuFlyoutPresenter MinWidth should be either FlyoutThemeMinWidth or FlyoutThemeTouchMinWidth.
						See: https://github.com/microsoft/microsoft-ui-xaml/blob/268e06867114c04cc0f25201b57f64e326113ba0/src/dxaml/xcp/dxaml/lib/MenuFlyoutPresenter_Partial.cpp#L911
						It is probably fine to always use FlyoutThemeMinWidth in our case.
						-->
						<ScrollViewer
							x:Name="MenuFlyoutPresenterScrollViewer"
							Margin="{TemplateBinding Padding}"
							MinWidth="{ThemeResource FlyoutThemeMinWidth}"
							HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
							IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
							IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
							ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}" AutomationProperties.AccessibilityView="Raw">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="AutomaticCoolingParametersStyle" />

	<DataTemplate x:Key="FixedCoolingParametersStyle" x:DataType="vm:FixedCoolingModeViewModel">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{StaticResource PropertyLabelColumnWidth}" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<TextBlock Grid.Row="0" Grid.Column="0" x:Uid="CoolingPowerLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<Slider
				Grid.Row="0"
				Grid.Column="1"
				Margin="{StaticResource RowContentLabelMargin}"
				Maximum="100"
				Minimum="{x:Bind MinimumPower, Mode=OneWay}"
				Value="{x:Bind Power, Mode=TwoWay, Converter={StaticResource ByteToDoubleConverter}}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch"
				ThumbToolTipValueConverter="{StaticResource IntegerPercentValueConverter}" />
			<Button Grid.Row="0" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{x:Bind ResetPowerCommand, Mode=OneWay}" CommandParameter="{x:Bind Mode=OneWay}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="SoftwareControlCurveCoolingParametersStyle" x:DataType="vm:SoftwareControlCurveCoolingModeViewModel">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{StaticResource PropertyLabelColumnWidth}" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Grid.Column="0" x:Uid="CoolingFallbackPowerLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<Slider
				Grid.Row="0"
				Grid.Column="1"
				Margin="6,6,6,6"
				Maximum="100"
				Minimum="{x:Bind MinimumPower, Mode=OneWay}"
				Value="{x:Bind FallbackPower, Mode=TwoWay, Converter={StaticResource ByteToDoubleConverter}}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch"
				ThumbToolTipValueConverter="{StaticResource IntegerPercentValueConverter}" />
			<Button Grid.Row="0" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{x:Bind ResetFallbackPowerCommand, Mode=OneWay}" CommandParameter="{x:Bind Mode=OneWay}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
			<TextBlock Grid.Row="1" Grid.Column="0" x:Uid="CoolingInputSensorLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<ComboBox
				Grid.Row="1"
				Grid.Column="1"
				Margin="{StaticResource RowContentLabelMargin}"
				ItemsSource="{x:Bind SensorsAvailableForCoolingControlCurves, Mode=OneWay}"
				SelectedItem="{x:Bind InputSensor, Mode=TwoWay}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch">
				<ComboBox.ItemTemplate>
					<DataTemplate x:DataType="vm:SensorViewModel">
						<TextBlock Text="{x:Bind FullDisplayName}" />
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<mxi:Interaction.Behaviors>
					<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
				</mxi:Interaction.Behaviors>
			</ComboBox>
			<Button Grid.Row="1" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{x:Bind ResetInputSensorCommand, Mode=OneWay}" CommandParameter="{x:Bind Mode=OneWay}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
			<lcontrols:PowerControlCurveEditor
				Grid.Row="2"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Style="{StaticResource CoolingPowerControlCurveEditorStyle}"
				MinimumInputValue="{x:Bind InputSensor.ScaleMinimumValue, Mode=OneWay}"
				MaximumInputValue="{x:Bind InputSensor.ScaleMaximumValue, Mode=OneWay}"
				LiveInputValue="{x:Bind InputSensor.LiveDetails.CurrentValue.Value, Mode=OneWay}"
				MinimumPower="{x:Bind MinimumOnPower, Mode=OneWay}"
				CanSwitchOff="{x:Bind CanSwitchOff, Mode=OneWay}"
				Points="{x:Bind Points, Mode=OneWay}" />
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="HardwareControlCurveCoolingParametersStyle" x:DataType="vm:ControlCurveCoolingModeViewModel">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="{StaticResource PropertyLabelColumnWidth}" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<TextBlock Grid.Row="0" Grid.Column="0" x:Uid="CoolingInputSensorLabel" VerticalAlignment="Center" Margin="{StaticResource RowLabelMargin}" />
			<ComboBox
				Grid.Row="0"
				Grid.Column="1"
				Margin="{StaticResource RowContentLabelMargin}"
				ItemsSource="{x:Bind SensorsAvailableForCoolingControlCurves, Mode=OneWay}"
				SelectedItem="{x:Bind InputSensor, Mode=TwoWay}"
				HorizontalContentAlignment="Stretch"
				HorizontalAlignment="Stretch">
				<ComboBox.ItemTemplate>
					<DataTemplate x:DataType="vm:SensorViewModel">
						<TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" />
					</DataTemplate>
				</ComboBox.ItemTemplate>
				<mxi:Interaction.Behaviors>
					<behaviors:ComboBoxSystemBackdropWorkaroundBehavior />
				</mxi:Interaction.Behaviors>
			</ComboBox>
			<Button Grid.Row="0" Grid.Column="2" Margin="{StaticResource RowContentMargin}" HorizontalAlignment="Right" Command="{x:Bind ResetInputSensorCommand, Mode=OneWay}" CommandParameter="{x:Bind Mode=OneWay}">
				<FontIcon Glyph="&#xE777;" />
			</Button>
			<lcontrols:PowerControlCurveEditor
				Grid.Row="1"
				Grid.Column="0"
				Grid.ColumnSpan="2"
				Style="{StaticResource CoolingPowerControlCurveEditorStyle}"
				MinimumInputValue="{x:Bind InputSensor.ScaleMinimumValue, Mode=OneWay}"
				MaximumInputValue="{x:Bind InputSensor.ScaleMaximumValue, Mode=OneWay}"
				LiveInputValue="{x:Bind InputSensor.LiveDetails.CurrentValue.Value, Mode=OneWay}"
				MinimumPower="{x:Bind MinimumOnPower, Mode=OneWay}"
				CanSwitchOff="{x:Bind CanSwitchOff, Mode=OneWay}"
				Points="{x:Bind Points, Mode=OneWay}" />
		</Grid>
	</DataTemplate>

	<lts:CoolingParametersTemplateSelector
		x:Key="CoolingParametersTemplateSelector"
		AutomaticTemplate="{StaticResource AutomaticCoolingParametersStyle}"
		FixedTemplate="{StaticResource FixedCoolingParametersStyle}"
		SoftwareControlCurveTemplate="{StaticResource SoftwareControlCurveCoolingParametersStyle}"
		HardwareControlCurveTemplate="{StaticResource HardwareControlCurveCoolingParametersStyle}" />

</ResourceDictionary>
