<?xml version="1.0" encoding="utf-8"?>
<Page
  x:Class="Exo.Settings.Ui.RootPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:Exo.Settings.Ui"
  xmlns:vm="using:Exo.Settings.Ui.ViewModels"
  xmlns:converters="using:Exo.Settings.Ui.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="TitleBarStates">
				<VisualState x:Name="Default" />
				<VisualState x:Name="Compact">
					<VisualState.Setters>
						<Setter Target="AppTitleBar.Margin" Value="96,0,0,0" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="Top">
					<VisualState.Setters>
						<Setter Target="AppTitleBar.Margin" Value="16,0,0,0" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="WindowActivationStates">
				<VisualState x:Name="Activated" />
				<VisualState x:Name="Deactivated">
					<VisualState.Setters>
						<Setter Target="AppTitle.Foreground" Value="{ThemeResource TextFillColorTertiaryBrush}" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<Border
      x:Name="AppTitleBar"
      Grid.Column="0"
      Height="{Binding ElementName=Navigation, Path=CompactPaneLength}"
      Margin="48,0,0,0"
      VerticalAlignment="Stretch"
      AutomationProperties.AutomationId="AppTitleBar"
      Canvas.ZIndex="1"
      IsHitTestVisible="True">
			<Grid VerticalAlignment="Center" Margin="0,0,146,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock
          x:Name="AppTitle"
          Margin="12,0,0,0"
          VerticalAlignment="Center"
          Style="{StaticResource CaptionTextBlockStyle}"
          Text="{x:Bind AppTitleText}" />
				<StackPanel x:Name="StatusIconArea" Grid.Column="2" Margin="12,0,0,0" VerticalAlignment="Center" Orientation="Horizontal">
					<Grid Grid.Column="2">
						<ToolTipService.ToolTip>
							<ToolTip Content="{x:Bind SettingsViewModel.ConnectionStatus, Mode=OneWay, Converter={StaticResource ConnectionStatusToTextConverter}}" />
						</ToolTipService.ToolTip>
						<FontIcon Glyph="&#xF385;" Foreground="Gray" />
						<FontIcon Glyph="&#xEA81;" Foreground="{x:Bind SettingsViewModel.ConnectionStatus, Mode=OneWay, Converter={StaticResource ConnectionStatusToColorConverter}}" />
					</Grid>
				</StackPanel>
			</Grid>
		</Border>

		<NavigationView
      x:Name="Navigation"
      Grid.Column="0"
      Grid.RowSpan="2"
      Canvas.ZIndex="0"
      IsTabStop="False"
      IsSettingsVisible="False"
      IsTitleBarAutoPaddingEnabled="True"
      OpenPaneLength="250"
      IsBackEnabled="{x:Bind SettingsViewModel.CanNavigateBack, Mode=OneWay}"
      MenuItemsSource="{x:Bind SettingsViewModel.NavigationPages, Mode=OneWay}"
      SelectedItem="{x:Bind SettingsViewModel.SelectedNavigationPage, Mode=TwoWay}"
      DisplayModeChanged="OnPaneDisplayModeChanged"
      ItemInvoked="OnNavigationItemInvoked"
      BackRequested="OnNavigationBackRequested"
      PointerPressed="OnNavigationPointerPressed"
      PointerCanceled="OnNavigationPointerCanceled"
      PointerCaptureLost="OnNavigationPointerCaptureLost"
      PointerReleased="OnNavigationPointerReleased">
			<NavigationView.Resources>
				<Thickness x:Key="NavigationViewContentMargin">0,48,0,0</Thickness>
				<Thickness x:Key="NavigationViewMinimalContentMargin">0,48,0,0</Thickness>
				<Thickness x:Key="NavigationViewContentGridBorderThickness">1,1,0,0</Thickness>
				<CornerRadius x:Key="NavigationViewContentGridCornerRadius">8,0,0,0</CornerRadius>
			</NavigationView.Resources>
			<NavigationView.MenuItemTemplate>
				<DataTemplate x:DataType="vm:PageViewModel">
					<NavigationViewItem Content="{x:Bind DisplayName, Mode=OneTime}" Tag="{x:Bind Mode=OneTime}">
						<NavigationViewItem.Icon>
							<FontIcon Glyph="{x:Bind Icon, Mode=OneTime}" />
						</NavigationViewItem.Icon>
					</NavigationViewItem>
				</DataTemplate>
			</NavigationView.MenuItemTemplate>

			<Grid Padding="{StaticResource NavigationContentPadding}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<ItemsRepeater Margin="{StaticResource NavigationContentHeaderMargin}" ItemsSource="{x:Bind SettingsViewModel.Notifications, Mode=OneWay}">
					<ItemsRepeater.ItemTemplate>
						<DataTemplate x:DataType="vm:NotificationViewModel">
							<!-- This is quirkyâ€¦ Using x:Bind here as Binding is utterly broken in this case.
                It was being completely broken due to interaction between the IsOpen property change and virtualization.
                x:Bind has its own share of defects too, but I verified that in this case it works as expected.
                Do note that we bind the IsOpen property, which is utterly stupid. It should always be true, but the InfoBar
                would override the property to false upon closing, breaking everything when the control is recycled. -->
							<InfoBar
                Severity="{x:Bind Severity, Converter={StaticResource NotificationSeverityConverter}, Mode=OneTime}"
                Title="{x:Bind Title, Mode=OneTime}"
                Message="{x:Bind Message, Mode=OneTime}"
                IsOpen="{x:Bind IsOpen, Mode=OneTime}"
                CloseButtonCommand="{x:Bind CloseCommand, Mode=OneTime}"
                CloseButtonCommandParameter="{x:Bind Mode=OneTime}" />
						</DataTemplate>
					</ItemsRepeater.ItemTemplate>
				</ItemsRepeater>

				<Grid Grid.Row="1" Margin="{StaticResource NavigationContentHeaderMargin}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<FontIcon Glyph="{x:Bind SettingsViewModel.CurrentPage.Icon, Mode=OneWay}" Margin="6,4,6,0" />
					<TextBlock
            Grid.Column="1"
            Margin="{StaticResource RowContentMargin}"
            Text="{x:Bind SettingsViewModel.CurrentPage.DisplayName, Mode=OneWay}"
            Style="{StaticResource TitleTextBlockStyle}"
            TextTrimming="CharacterEllipsis"
            TextWrapping="NoWrap" />
					<StackPanel
            Grid.Column="2"
            Margin="6,12,0,0"
            Orientation="Horizontal"
            VerticalAlignment="Center"
            Visibility="{x:Bind Devices.SelectedDevice.SerialNumber, Converter={StaticResource NullabilityToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}">
						<TextBlock x:Uid="DeviceSerialNumberLabel" VerticalAlignment="Center" Margin="0,0,4,0" Style="{StaticResource CaptionTextBlockStyle}" />
						<TextBlock Text="{x:Bind Devices.SelectedDevice.SerialNumber, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" />
					</StackPanel>
					<FontIcon
            Grid.Column="4"
            Visibility="{x:Bind Devices.SelectedDevice.PowerFeatures.BatteryState, Converter={StaticResource NullabilityToVisibilityConverter}, Mode=OneWay}"
            Glyph="{x:Bind Devices.SelectedDevice.PowerFeatures.BatteryState, Converter={StaticResource BatteryStateToGlyphConverter}, Mode=OneWay}"
            ToolTipService.ToolTip="{x:Bind Devices.SelectedDevice.PowerFeatures.BatteryState.Level, Converter={StaticResource StringFormatConverter}, ConverterParameter=P0, Mode=OneWay}" />
				</Grid>

				<Frame
          x:Name="ContentFrame"
					Grid.Row="2"
          IsNavigationStackEnabled="False">
					<Frame.ContentTransitions>
						<NavigationThemeTransition />
					</Frame.ContentTransitions>
				</Frame>
			</Grid>
		</NavigationView>
	</Grid>
</Page>
