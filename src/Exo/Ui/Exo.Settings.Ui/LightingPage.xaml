<?xml version="1.0" encoding="utf-8"?>
<Page
	x:Class="Exo.Settings.Ui.LightingPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="using:Exo.Settings.Ui"
	xmlns:lconverters="using:Exo.Settings.Ui.Converters"
	xmlns:vm="using:Exo.Settings.Ui.ViewModels"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:controls="using:CommunityToolkit.WinUI.Controls"
	mc:Ignorable="d">

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<CommandBar OverflowButtonVisibility="Collapsed" IsOpen="False" DefaultLabelPosition="Right" Margin="0,0,0,6">
			<AppBarToggleButton x:Uid="CentralizedLightingToggleButton" IsChecked="{x:Bind Lighting.UseCentralizedLighting, Mode=TwoWay}">
				<AppBarToggleButton.Icon>
					<FontIcon Glyph="&#xF0B9;" />
				</AppBarToggleButton.Icon>
			</AppBarToggleButton>
			<AppBarButton x:Uid="CurrentColorButton" AllowFocusOnInteraction="True">
				<AppBarButton.Resources>
					<Visibility x:Key="AppBarButtonHasFlyoutChevronVisibility">Visible</Visibility>
					<CornerRadius x:Key="ColorPickerButtonPreviewCornerRadius">2</CornerRadius>
					<Thickness x:Key="ColorPickerButtonPadding">3,3,6,3</Thickness>
					<x:Double x:Key="ColorPickerButtonPreviewMinHeight">16</x:Double>
					<x:Double x:Key="ColorPickerButtonPreviewMinWidth">16</x:Double>
				</AppBarButton.Resources>
				<AppBarButton.Flyout>
					<Flyout ShouldConstrainToRootBounds="False">
						<Flyout.FlyoutPresenterStyle>
							<Style TargetType="FlyoutPresenter">
								<Setter Property="Padding" Value="0" />
								<Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
								<Setter Property="Background" Value="Transparent" />
								<Setter Property="MinHeight" Value="420" />
								<Setter Property="IsTabStop" Value="False" />
								<Setter Property="TabNavigation" Value="Cycle" />
							</Style>
						</Flyout.FlyoutPresenterStyle>
						<Flyout.SystemBackdrop>
							<DesktopAcrylicBackdrop />
						</Flyout.SystemBackdrop>
						<controls:ColorPicker
							x:Name="EditColorPicker"
							IsAlphaEnabled="False"
							ColorSpectrumShape="Ring"
							CustomPalette="{StaticResource RgbLightingDefaultPalette}"
							Height="420">
							<controls:ColorPicker.Resources>
								<!-- GridViewItemMinWidth and GridViewItemMinHeight would be 44 by default. -->
								<x:Double x:Key="GridViewItemMinWidth">4</x:Double>
								<x:Double x:Key="GridViewItemMinHeight">78</x:Double>
							</controls:ColorPicker.Resources>
						</controls:ColorPicker>
					</Flyout>
				</AppBarButton.Flyout>
				<AppBarButton.Content>
					<Grid BorderBrush="{ThemeResource ButtonBorderBrush}"
						BorderThickness="1"
						CornerRadius="{ThemeResource ColorPickerButtonPreviewCornerRadius}"
						Margin="-2">
						<Border
							MinWidth="{ThemeResource ColorPickerButtonPreviewMinWidth}"
							MinHeight="{ThemeResource ColorPickerButtonPreviewMinHeight}"
							CornerRadius="{ThemeResource ColorPickerButtonPreviewCornerRadius}" />
						<Border CornerRadius="{ThemeResource ColorPickerButtonPreviewCornerRadius}">
							<Border.Background>
								<SolidColorBrush Color="{x:Bind EditionService.Color, Mode=OneWay}" />
							</Border.Background>
						</Border>
					</Grid>
				</AppBarButton.Content>
			</AppBarButton>
			<AppBarSeparator />
			<AppBarButton x:Uid="LightingImportConfigurationButton" Command="{x:Bind Lighting.ImportConfigurationCommand}">
				<FontIcon Glyph="&#xE8E5;" />
			</AppBarButton>
			<AppBarButton x:Uid="LightingExportConfigurationButton" Command="{x:Bind Lighting.ExportConfigurationCommand}">
				<FontIcon Glyph="&#xE78C;" />
			</AppBarButton>
		</CommandBar>
		<ScrollViewer
			Grid.Row="1"
			VerticalScrollBarVisibility="Auto"
			VerticalScrollMode="Auto">
			<StackPanel Margin="{StaticResource NavigationContentScrollViewerPadding}" Orientation="Vertical" HorizontalAlignment="Stretch">
				<ContentControl
					IsEnabled="{x:Bind Lighting.IsReady, Mode=OneWay}"
					Visibility="{x:Bind Lighting.UseCentralizedLighting, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
					HorizontalContentAlignment="Stretch">
					<local:LightingZoneControl LightingZone="{x:Bind Lighting.CentralizedLightingZone}" />
				</ContentControl>
				<ItemsControl
					Visibility="{x:Bind Lighting.UseCentralizedLighting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True, Mode=OneWay}"
					ItemsSource="{x:Bind Lighting.LightingDevices, Mode=OneWay}"
					HorizontalAlignment="Stretch"
					HorizontalContentAlignment="Stretch">
					<ItemsControl.ItemTemplate>
						<DataTemplate x:DataType="vm:LightingDeviceViewModel">
							<Expander Margin="{StaticResource VerticalItemSpacing}" IsEnabled="{x:Bind IsNotBusy, Mode=OneWay}" IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
								<Expander.Header>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<FontIcon Grid.Column="0" Glyph="{x:Bind Category, Converter={StaticResource DeviceCategoryToGlyphConverter}, Mode=OneWay}" VerticalAlignment="Center" />
										<TextBlock Grid.Column="1" Text="{x:Bind FriendlyName, Mode=OneWay}" Margin="{StaticResource TitleTextIconMargin}" VerticalAlignment="Center" />
										<ToggleSwitch Grid.Column="3" x:Uid="LightingZoneUnifiedLightingToggle" Style="{StaticResource LeftContentToggleSwitchStyle}" IsOn="{x:Bind UseUnifiedLighting, Mode=TwoWay}" Margin="{StaticResource TitleTextIconMargin}" Visibility="{x:Bind CanToggleUnifiedLighting, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
											<ToggleSwitch.OffContent>
												<FontIcon Glyph="&#xE71B;" />
											</ToggleSwitch.OffContent>
											<ToggleSwitch.OnContent>
												<FontIcon Glyph="&#xE71B;" Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}" />
											</ToggleSwitch.OnContent>
										</ToggleSwitch>
									</Grid>
								</Expander.Header>
								<StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
									<Grid Margin="0,0,0,12" Visibility="{x:Bind Brightness, Converter={StaticResource NullabilityToVisibilityConverter}, Mode=OneWay}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="{StaticResource PropertyLabelColumnWidth}" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<TextBlock Text="Brightness" Margin="{StaticResource RowLabelMargin}" />
										<Slider
											Grid.Column="1"
											Style="{StaticResource BrightnessSliderStyle}"
											Margin="{StaticResource RowContentMargin}"
											Value="{x:Bind Brightness.Level, Mode=TwoWay, Converter={StaticResource ByteToDoubleConverter}}"
											Maximum="{x:Bind Brightness.MaximumLevel, Mode=OneWay, Converter={StaticResource ByteToDoubleConverter}}"
											Minimum="{x:Bind Brightness.MinimumLevel, Mode=OneWay, Converter={StaticResource ByteToDoubleConverter}}">
											<Slider.ThumbToolTipValueConverter>
												<lconverters:CappedValueToPercentConverter MaximumValue="{x:Bind Brightness.MaximumLevel}" />
											</Slider.ThumbToolTipValueConverter>
										</Slider>
									</Grid>
									<local:LightingZoneControl Visibility="{x:Bind UseUnifiedLighting, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" LightingZone="{x:Bind UnifiedLightingZone}" />
									<ItemsControl ItemsSource="{x:Bind LightingZones, Mode=OneWay}" HorizontalContentAlignment="Stretch" Visibility="{x:Bind UseUnifiedLighting, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True, Mode=OneWay}">
										<ItemsControl.ItemTemplate>
											<DataTemplate x:DataType="vm:LightingZoneViewModel">
												<Expander Margin="{StaticResource VerticalItemSpacing}" IsExpanded="{x:Bind IsExpanded, Mode=TwoWay}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
													<Expander.Header>
														<StackPanel Orientation="Horizontal">
															<FontIcon Style="{StaticResource FluentSystemFontIcon}" Glyph="{x:Bind ComponentType, Converter={StaticResource LightingZoneComponentTypeToGlyphConverter}}" />
															<TextBlock Text="{x:Bind Name, Mode=OneWay}" Margin="{StaticResource TitleTextIconMargin}" />
															<Border Margin="12,0,0,0" Width="20" Height="20" Visibility="{x:Bind Color, Converter={StaticResource NullabilityToVisibilityConverter}, Mode=OneWay}" BorderBrush="{ThemeResource ControlStrokeColorSecondaryBrush}" BorderThickness="1">
																<Border.Background>
																	<SolidColorBrush Color="{x:Bind Color, Converter={StaticResource NullableColorConverter}, Mode=OneWay}" />
																</Border.Background>
															</Border>
														</StackPanel>
													</Expander.Header>
													<local:LightingZoneControl LightingZone="{x:Bind}" />
												</Expander>
											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>
									<Grid Margin="0,12,0,0">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<CheckBox x:Uid="LightingPersistChangesCheckBox" Grid.Column="0" IsChecked="{x:Bind ShouldPersistChanges, Mode=TwoWay}" Visibility="{x:Bind CanPersistChanges, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
											<CheckBox.ContentTemplate>
												<DataTemplate>
													<TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis" />
												</DataTemplate>
											</CheckBox.ContentTemplate>
										</CheckBox>
										<Button x:Uid="ResetButton" Grid.Column="1" Margin="0,0,6,0" Command="{x:Bind ResetChangesCommand}" />
										<Button x:Uid="ApplyButton" Grid.Column="2" Style="{StaticResource AccentButtonStyle}" Margin="6,0,0,0" Command="{x:Bind ApplyChangesCommand}" />
									</Grid>
								</StackPanel>
							</Expander>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
				<Grid Margin="0,12,0,0">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<Button x:Uid="ResetButton" Grid.Column="1" Margin="0,0,6,0" Command="{x:Bind Lighting.ResetChangesCommand}" />
					<Button x:Uid="ApplyButton" Grid.Column="2" Style="{StaticResource AccentButtonStyle}" Margin="6,0,0,0" Command="{x:Bind Lighting.ApplyChangesCommand}" />
				</Grid>
			</StackPanel>
		</ScrollViewer>
	</Grid>
</Page>
